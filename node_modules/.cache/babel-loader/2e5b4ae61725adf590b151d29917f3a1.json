{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\pages\\\\FilmIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../api/PostService\";\nimport { ArrContext } from \"../context\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmIdPage = function () {\n  _s();\n\n  const params = useParams();\n  const [film, setFilm] = useState({});\n  const filmArr = params.id.split('_');\n  const filmId = filmArr[0];\n\n  const filmPage = () => {\n    let count = 1;\n    let filmInd = filmArr[1];\n\n    while (filmInd > 19) {\n      filmInd = filmInd - 20;\n      count = count + 1;\n    }\n\n    return count;\n  };\n\n  console.log(filmPage(), filmId);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(filmPage());\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"filmId__block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: film.nameRu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"filmId__img\",\n        src: film.posterUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0416\\u0430\\u043D\\u0440: \", film.genres[0].genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u041A\\u0418\\u041D\\u041E\\u041F\\u041E\\u0418\\u0421\\u041A: \", film.ratingKinopoisk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 Imdb: \", film.ratingKinopoisk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0413\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430: \", film.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n\n    setFilm([...posts].filter(el => {\n      if (el.kinopoiskId == filmId) {\n        console.log(el);\n        return el;\n      }\n    })[0]);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  console.log(film);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmId__wrapper\",\n    children: isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this) : postError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmId__block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: film.nameRu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"filmId__img\",\n        src: film.posterUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0416\\u0430\\u043D\\u0440: \", film.genres[0].genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u041A\\u0418\\u041D\\u041E\\u041F\\u041E\\u0418\\u0421\\u041A: \", film.ratingKinopoisk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 Imdb: \", film.ratingKinopoisk]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0413\\u043E\\u0434 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0441\\u0442\\u0432\\u0430: \", film.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilmIdPage, \"ROYGB7DkJX0qFNoizozlq5aQDjQ=\", false, function () {\n  return [useParams, useFetching];\n});\n\n_c = FilmIdPage;\nexport default FilmIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmIdPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/pages/FilmIdPage.jsx"],"names":["React","useContext","useEffect","useState","useParams","PostService","ArrContext","useFetching","FilmIdPage","params","film","setFilm","filmArr","id","split","filmId","filmPage","count","filmInd","console","log","fetchPosts","isPostsLoading","postError","posts","getAll","nameRu","posterUrl","genres","genre","ratingKinopoisk","year","filter","el","kinopoiskId"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../api/PostService\";\r\nimport { ArrContext } from \"../context\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nconst FilmIdPage = function() {\r\n\r\n    const params = useParams()\r\n    const [film, setFilm] = useState({})\r\n    \r\n     \r\n    const filmArr = params.id.split('_')\r\n    const filmId = filmArr[0]\r\n    const filmPage = () => {\r\n        let count = 1\r\n        let filmInd = filmArr[1]\r\n        while (filmInd>19) {\r\n            filmInd = filmInd-20\r\n            count = count+1\r\n        }\r\n        return count\r\n    }  \r\n\r\n    console.log(filmPage(), filmId)\r\n\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n   \r\n        const posts = await PostService.getAll(filmPage());\r\n        <div className=\"filmId__block\"> \r\n        <h1>\r\n        {film.nameRu}\r\n        </h1>\r\n\r\n    <img className=\"filmId__img\" src={film.posterUrl}/>\r\n    \r\n        <div>Жанр: {film.genres[0].genre}</div> \r\n        <div>Рейтинг КИНОПОИСК: {film.ratingKinopoisk}</div>\r\n        <div>Рейтинг Imdb: {film.ratingKinopoisk}</div>  \r\n        <div>Год производства: {film.year}</div>    \r\n </div>  \r\n        setFilm([...posts].filter(el =>  {\r\n              if(el.kinopoiskId == filmId) {\r\n                  console.log(el)\r\n                  return el\r\n              }\r\n          })[0])\r\n    \r\n      })\r\n    \r\n    \r\n    \r\n      useEffect(() => {\r\n        fetchPosts();\r\n        }, [])\r\n\r\n    console.log(film)\r\n    \r\n    return(\r\n        <div className=\"filmId__wrapper\"> \r\n             \r\n                   {isPostsLoading\r\n                   ? <div>Загрузка...</div>\r\n                    : postError\r\n                        ?<div>Error</div>\r\n                        : <div className=\"filmId__block\"> \r\n                                <h1>\r\n                                {film.nameRu}\r\n                                </h1>\r\n\r\n                            <img className=\"filmId__img\" src={film.posterUrl}/>\r\n                            \r\n                                <div>Жанр: {film.genres[0].genre}</div> \r\n                                <div>Рейтинг КИНОПОИСК: {film.ratingKinopoisk}</div>\r\n                                <div>Рейтинг Imdb: {film.ratingKinopoisk}</div>  \r\n                                <div>Год производства: {film.year}</div>    \r\n                        </div>}\r\n                            \r\n            \r\n                \r\n                \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmIdPage;"]},"metadata":{},"sourceType":"module"}