{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\krby\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport './style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService;\n    setPosts(posts);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vwf+g9+TTMc0+tjnar0D0AE0awU=\", false, function () {\n  return [useFetching];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/krby/src/App.js"],"names":["React","Header","useFetching","App","fetchPosts","isPostsLoading","postError","posts","PostService","setPosts","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,iBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,cAAb,EAA6BC,SAA7B,IAA0CJ,WAAW,CAAC,YAAY;AACtE,UAAMK,KAAK,GAAG,MAAMC,WAApB;AACAC,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACD,GAH0D,CAA3D;AAOAG,EAAAA,SAAS,CAAC,MAAM;AAChBN,IAAAA,UAAU;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnBQD,G;UAEyCD,W;;;KAFzCC,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport './style/App.css'\n\nfunction App() {\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService\n    setPosts(posts)\n  })\n\n\n\n  useEffect(() => {\n  fetchPosts();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}