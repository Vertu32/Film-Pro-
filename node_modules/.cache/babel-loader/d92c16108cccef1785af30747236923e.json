{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\pages\\\\MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage() {\n  _s();\n\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(3);\n  const [search, setSearch] = useState();\n  const [filter, setFilter] = useState('');\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(page);\n    setFilms([...films, ...posts]);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  const searchedFilms = useMemo(() => {\n    return [...films].filter(film => {\n      if (film.nameRu) {\n        return film.nameRu.toLowerCase().includes(filter);\n      }\n    });\n  }, [filter, films]);\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    if (films.length) {\n      setPage(page + 1);\n    }\n\n    ;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films__container\",\n      children: searchedFilms.length ? searchedFilms.map(film => /*#__PURE__*/_jsxDEV(FilmList, {\n        image: film.posterUrl,\n        name: film.nameRu,\n        countries: film['countries'][0],\n        year: film.year\n      }, film.kinopoiskId + Date.now(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failed__search\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u043C\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MainPage, \"FpgR47UaPhp3OQGxHrFV4gKdLPY=\", true);\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/pages/MainPage.jsx"],"names":["MainPage","films","setFilms","useState","page","setPage","totalPages","setTotalPages","search","setSearch","filter","setFilter","lastElement","useRef","fetchPosts","isPostsLoading","postError","useFetching","posts","PostService","getAll","useEffect","searchedFilms","useMemo","film","nameRu","toLowerCase","includes","useObserver","length","map","posterUrl","year","kinopoiskId","Date","now"],"mappings":";;;;;AAGA,SAASA,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AAGA,QAAMS,WAAW,GAAGC,MAAM,EAA1B;AAKA,QAAM,CAACC,UAAD,EAAaC,cAAb,EAA6BC,SAA7B,IAA0CC,WAAW,CAAC,YAAY;AAEtE,UAAMC,KAAK,GAAG,MAAMC,WAAW,CAACC,MAAZ,CAAmBhB,IAAnB,CAApB;AACEF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGiB,KAAd,CAAD,CAAR;AAEH,GAL0D,CAA3D;AASAG,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,UAAU;AACT,GAFM,EAEJ,CAACV,IAAD,CAFI,CAAT;AAOE,QAAMkB,aAAa,GAAGC,OAAO,CAAC,MAAM;AAElC,WAAO,CAAC,GAAGtB,KAAJ,EAAWS,MAAX,CAAkBc,IAAI,IAAI;AAC/B,UAAGA,IAAI,CAACC,MAAR,EAAgB;AACd,eAAOD,IAAI,CAACC,MAAL,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCjB,MAAnC,CAAP;AACD;AACF,KAJM,CAAP;AAMD,GAR4B,EAQ1B,CAACA,MAAD,EAAST,KAAT,CAR0B,CAA7B;AAYA2B,EAAAA,WAAW,CAAChB,WAAD,EAAcR,IAAI,GAAGE,UAArB,EAAiCS,cAAjC,EAAiD,MAAM;AAChE,QAAGd,KAAK,CAAC4B,MAAT,EAAiB;AAACxB,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AAAgB;;AAAA;AACnC,GAFU,CAAX;AAKF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACA,MAAA,MAAM,EAAEM,MADR;AAEA,MAAA,SAAS,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACIW,aAAa,CAACO,MAAd,GACAP,aAAa,CAACQ,GAAd,CAAmBN,IAAD,iBACpB,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,IAAI,CAACO,SAFd;AAGE,QAAA,IAAI,EAAEP,IAAI,CAACC,MAHb;AAIE,QAAA,SAAS,EAAED,IAAI,CAAC,WAAD,CAAJ,CAAkB,CAAlB,CAJb;AAKE,QAAA,IAAI,EAAEA,IAAI,CAACQ;AALb,SACOR,IAAI,CAACS,WAAL,GAAiBC,IAAI,CAACC,GAAL,EADxB;AAAA;AAAA;AAAA;AAAA,cADE,CADA,gBAUE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,YANF,eAuBE;AACA,MAAA,GAAG,EAAEvB;AADL;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA5EMZ,Q;;KAAAA,Q;AA8EP,eAAeA,QAAf","sourcesContent":["\r\n\r\n\r\nfunction MainPage() {\r\n\r\n    const [films, setFilms] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(3)\r\n    const [search, setSearch] = useState()\r\n    const [filter,setFilter] = useState('')\r\n  \r\n  \r\n    const lastElement = useRef()\r\n  \r\n  \r\n    \r\n  \r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n   \r\n      const posts = await PostService.getAll(page);\r\n        setFilms([...films, ...posts])\r\n  \r\n    })\r\n  \r\n  \r\n  \r\n    useEffect(() => {\r\n      fetchPosts();\r\n      }, [page])\r\n     \r\n    \r\n  \r\n  \r\n      const searchedFilms = useMemo(() => {\r\n        \r\n        return [...films].filter(film => {\r\n          if(film.nameRu) {\r\n            return film.nameRu.toLowerCase().includes(filter)\r\n          }\r\n        })\r\n  \r\n      }, [filter, films])\r\n      \r\n      \r\n    \r\n      useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n        if(films.length) {setPage(page+1)};\r\n      })\r\n      \r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <Search\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n        />\r\n        <div className='films__container'>\r\n          { searchedFilms.length\r\n          ? searchedFilms.map((film) => \r\n          <FilmList \r\n            key={film.kinopoiskId+Date.now()}\r\n            image={film.posterUrl}\r\n            name={film.nameRu}\r\n            countries={film['countries'][0]}\r\n            year={film.year}\r\n            >\r\n          </FilmList> )\r\n            : <div className='failed__search'>\r\n                <h2>Фильмы не найдены!</h2>\r\n             </div>\r\n          }\r\n            \r\n        </div>\r\n        <div \r\n        ref={lastElement}>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default MainPage;"]},"metadata":{},"sourceType":"module"}