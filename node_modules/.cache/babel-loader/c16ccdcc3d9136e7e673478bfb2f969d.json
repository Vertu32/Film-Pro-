{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Input, InputAdornment, InputBase, InputLabel } from '@mui/material';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport { useFetching } from './hooks/useFetching';\nimport { useObserver } from './hooks/useObserver';\nimport './style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(20);\n  const [search, setSearch] = useState();\n  const [filter, setFilter] = useState('');\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(page);\n    setFilms([...films, ...posts]);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n\n  const searchFilm = function () {\n    setFilms(films.forEach(film => {})); // return setFilms([...films].filter(film => {\n    //   if (film.nameRu) {\n    //     film.nameRu.toLowerCase().includes(filter)\n    //   }\n    // }))\n  };\n\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    if (films.length) {\n      setPage(page + 1);\n    }\n\n    ;\n  }); // console.log(films)   \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      filter: filter,\n      setFilter: setFilter,\n      search: searchFilm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films__container\",\n      children: films.map(film => /*#__PURE__*/_jsxDEV(FilmList, {\n        image: film.posterUrl,\n        name: film.nameRu,\n        countries: film['countries'][0],\n        year: film.year\n      }, film.kinopoiskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: '20px',\n        background: 'teal'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cJnWritjuHQLmynDLy0khhD85Ic=\", false, function () {\n  return [useFetching, useObserver];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/App.js"],"names":["Button","Input","InputAdornment","InputBase","InputLabel","React","useEffect","useMemo","useRef","useState","PostService","FilmList","Header","Search","useFetching","useObserver","App","films","setFilms","page","setPage","totalPages","setTotalPages","search","setSearch","filter","setFilter","lastElement","fetchPosts","isPostsLoading","postError","posts","getAll","searchFilm","forEach","film","length","map","posterUrl","nameRu","year","kinopoiskId","height","background"],"mappings":"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","sourcesContent":["import { Button, Input, InputAdornment, InputBase, InputLabel } from '@mui/material';\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport { useFetching } from './hooks/useFetching';\nimport {useObserver} from './hooks/useObserver'\nimport './style/App.css'\n\nfunction App() {\n\n  const [films, setFilms] = useState([])\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(20)\n  const [search, setSearch] = useState()\n  const [filter,setFilter] = useState('')\n\n\n  const lastElement = useRef()\n\n\n  \n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n \n    const posts = await PostService.getAll(page);\n      setFilms([...films, ...posts])\n\n  })\n\n\n\n  useEffect(() => {\n    fetchPosts();\n    }, [page])\n   \n  \n\n    const searchFilm = function() {\n      \n      setFilms(films.forEach(film => {\n        \n      }))\n\n\n      // return setFilms([...films].filter(film => {\n      //   if (film.nameRu) {\n      //     film.nameRu.toLowerCase().includes(filter)\n      //   }\n        \n      // }))\n      \n    }\n    \n    \n    \n  \n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n      if(films.length) {setPage(page+1)};\n    })\n    \n    // console.log(films)   \n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Search\n      filter={filter}\n      setFilter={setFilter}\n      search={searchFilm}/>\n      <div className='films__container'>\n        {films.map((film) => \n          <FilmList \n            key={film.kinopoiskId}\n            image={film.posterUrl}\n            name={film.nameRu}\n            countries={film['countries'][0]}\n            year={film.year}\n            >\n          </FilmList>\n          )}\n          \n      </div>\n      <div \n      ref={lastElement} \n      style={{height:'20px', background: 'teal'}}>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}