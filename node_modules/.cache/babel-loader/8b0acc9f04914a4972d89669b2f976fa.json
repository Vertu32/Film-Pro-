{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\pages\\\\FilmIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../api/PostService\";\nimport { ArrContext } from \"../context\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmIdPage = function () {\n  _s();\n\n  const params = useParams();\n  const [film, setFilm] = useState({});\n  const filmArr = params.id.split('_');\n  const filmId = filmArr[0];\n\n  const filmPage = () => {\n    let count = 1;\n    let filmInd = filmArr[1];\n\n    while (filmInd > 19) {\n      filmInd = filmInd - 20;\n      count = count + 1;\n    }\n\n    return count;\n  };\n\n  console.log(filmPage(), filmId);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(filmPage());\n    setFilm([...posts].filter(el => {\n      if (el.kinopoiskId == filmId) {\n        return el;\n      }\n    })[0]);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  console.log(film);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmId__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmId__block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilmIdPage, \"ROYGB7DkJX0qFNoizozlq5aQDjQ=\", false, function () {\n  return [useParams, useFetching];\n});\n\n_c = FilmIdPage;\nexport default FilmIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmIdPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/pages/FilmIdPage.jsx"],"names":["React","useContext","useEffect","useState","useParams","PostService","ArrContext","useFetching","FilmIdPage","params","film","setFilm","filmArr","id","split","filmId","filmPage","count","filmInd","console","log","fetchPosts","isPostsLoading","postError","posts","getAll","filter","el","kinopoiskId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,UAAU,GAAG,YAAW;AAAA;;AAE1B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAMS,OAAO,GAAGH,MAAM,CAACI,EAAP,CAAUC,KAAV,CAAgB,GAAhB,CAAhB;AACA,QAAMC,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAtB;;AACA,QAAMI,QAAQ,GAAG,MAAM;AACnB,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAGN,OAAO,CAAC,CAAD,CAArB;;AACA,WAAOM,OAAO,GAAC,EAAf,EAAmB;AACfA,MAAAA,OAAO,GAAGA,OAAO,GAAC,EAAlB;AACAD,MAAAA,KAAK,GAAGA,KAAK,GAAC,CAAd;AACH;;AACD,WAAOA,KAAP;AACH,GARD;;AAUAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,EAApB,EAAwBD,MAAxB;AAGA,QAAM,CAACM,UAAD,EAAaC,cAAb,EAA6BC,SAA7B,IAA0ChB,WAAW,CAAC,YAAY;AAEpE,UAAMiB,KAAK,GAAG,MAAMnB,WAAW,CAACoB,MAAZ,CAAmBT,QAAQ,EAA3B,CAApB;AACEL,IAAAA,OAAO,CAAC,CAAC,GAAGa,KAAJ,EAAWE,MAAX,CAAkBC,EAAE,IAAK;AAC7B,UAAGA,EAAE,CAACC,WAAH,IAAkBb,MAArB,EAA6B;AACzB,eAAOY,EAAP;AACH;AACJ,KAJO,EAIL,CAJK,CAAD,CAAP;AAMH,GATwD,CAA3D;AAaEzB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU;AACT,GAFM,EAEJ,EAFI,CAAT;AAIFF,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApDD;;GAAMF,U;UAEaJ,S,EAmBiCG,W;;;KArB9CC,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../api/PostService\";\r\nimport { ArrContext } from \"../context\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nconst FilmIdPage = function() {\r\n\r\n    const params = useParams()\r\n    const [film, setFilm] = useState({})\r\n    \r\n     \r\n    const filmArr = params.id.split('_')\r\n    const filmId = filmArr[0]\r\n    const filmPage = () => {\r\n        let count = 1\r\n        let filmInd = filmArr[1]\r\n        while (filmInd>19) {\r\n            filmInd = filmInd-20\r\n            count = count+1\r\n        }\r\n        return count\r\n    }  \r\n\r\n    console.log(filmPage(), filmId)\r\n\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n   \r\n        const posts = await PostService.getAll(filmPage());\r\n          setFilm([...posts].filter(el =>  {\r\n              if(el.kinopoiskId == filmId) {\r\n                  return el\r\n              }\r\n          })[0])\r\n    \r\n      })\r\n    \r\n    \r\n    \r\n      useEffect(() => {\r\n        fetchPosts();\r\n        }, [])\r\n\r\n    console.log(film)\r\n    \r\n    return(\r\n        <div className=\"filmId__wrapper\"> \r\n             <div className=\"filmId__block\">\r\n                   {}\r\n                            \r\n            \r\n                \r\n                \r\n            </div> \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmIdPage;"]},"metadata":{},"sourceType":"module"}