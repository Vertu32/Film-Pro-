{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\pages\\\\FilmIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../api/PostService\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmIdPage = function () {\n  _s();\n\n  const params = useParams(); // Создаем состояние, в которое поместим то, что вернет сервер по id\n\n  const [film, setFilm] = useState({}); // Данный callback возвращает нам параметры его содержащие в первом элементе массива\n\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(params.id);\n    setFilm(response);\n  }); // Вызываем функцию, что вернул callback\n\n  useEffect(() => {\n    fetchPostById(params.id);\n  }, []);\n  console.log(response);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430 \\u0441 ID = \", params.id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilmIdPage, \"gpEQpnZoVPtkKhpfUFovsSxjMpQ=\", false, function () {\n  return [useParams, useFetching];\n});\n\n_c = FilmIdPage;\nexport default FilmIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmIdPage\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/pages/FilmIdPage.jsx"],"names":["React","useEffect","useState","useParams","PostService","useFetching","FilmIdPage","params","film","setFilm","fetchPostById","isLoading","error","id","response","getById","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,UAAU,GAAG,YAAW;AAAA;;AAE1B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB,CAF0B,CAK1B;;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAN0B,CAO1B;;AACA,QAAM,CAACQ,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCP,WAAW,CAAC,MAAMQ,EAAN,IAAa;AAC/D,UAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoBR,MAAM,CAACM,EAA3B,CAAvB;AACAJ,IAAAA,OAAO,CAACK,QAAD,CAAP;AAEH,GAJoD,CAArD,CAR0B,CAa1B;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,aAAa,CAACH,MAAM,CAACM,EAAR,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,sBACI;AAAA,sHAA8BP,MAAM,CAACM,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAtBD;;GAAMP,U;UAEaH,S,EAM2BE,W;;;KARxCC,U;AAwBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../api/PostService\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\n\r\nconst FilmIdPage = function() {\r\n\r\n    const params = useParams()\r\n\r\n\r\n    // Создаем состояние, в которое поместим то, что вернет сервер по id\r\n    const [film, setFilm] = useState({});\r\n    // Данный callback возвращает нам параметры его содержащие в первом элементе массива\r\n    const [fetchPostById, isLoading, error] = useFetching(async(id) => { \r\n        const response = await PostService.getById(params.id);\r\n        setFilm(response)\r\n        \r\n    })\r\n    // Вызываем функцию, что вернул callback\r\n    useEffect(() => {\r\n        fetchPostById(params.id) \r\n    }, [])\r\n\r\n    console.log(response)\r\n    return(\r\n        <div> Страница фильма с ID = {params.id} </div>\r\n    )\r\n}\r\n\r\nexport default FilmIdPage;"]},"metadata":{},"sourceType":"module"}