{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport './style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const observer = useRef();\n  useEffect(() => {\n    if (isPostsLoading) return;\n\n    var callback = function (entries, observer) {\n      if (entries[0].isIntersecting) {\n        console.log(page);\n        setPage(page + 1);\n      }\n    };\n\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(lastElement.current);\n  }, [isPostsLoading]);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(page);\n    setFilms(...films, posts);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films__container\",\n      children: [films.map(film => /*#__PURE__*/_jsxDEV(FilmList, {\n        image: film.posterUrl,\n        name: film.nameRu,\n        countries: film['countries'][0],\n        year: film.year\n      }, film.kinopoiskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: '20px',\n        background: 'teal'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aMghMSZ1wpGbE5NQUmLa2ig4etI=\", false, function () {\n  return [useFetching];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/App.js"],"names":["React","useEffect","useRef","useState","PostService","FilmList","Header","useFetching","App","films","setFilms","page","setPage","lastElement","observer","isPostsLoading","callback","entries","isIntersecting","console","log","current","IntersectionObserver","observe","fetchPosts","postError","posts","getAll","map","film","posterUrl","nameRu","year","kinopoiskId","height","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,iBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMU,WAAW,GAAGX,MAAM,EAA1B;AACA,QAAMY,QAAQ,GAAGZ,MAAM,EAAvB;AAMAD,EAAAA,SAAS,CAAE,MAAM;AACf,QAAGc,cAAH,EAAmB;;AAEnB,QAAIC,QAAQ,GAAG,UAASC,OAAT,EAAkBH,QAAlB,EAA4B;AACzC,UAAGG,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAd,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAC,QAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD;AACF,KALD;;AAMAG,IAAAA,QAAQ,CAACO,OAAT,GAAmB,IAAIC,oBAAJ,CAAyBN,QAAzB,CAAnB;AACAF,IAAAA,QAAQ,CAACO,OAAT,CAAiBE,OAAjB,CAAyBV,WAAW,CAACQ,OAArC;AACC,GAXM,EAYT,CAACN,cAAD,CAZS,CAAT;AAeA,QAAM,CAACS,UAAD,EAAaT,cAAb,EAA6BU,SAA7B,IAA0ClB,WAAW,CAAC,YAAY;AAEtE,UAAMmB,KAAK,GAAG,MAAMtB,WAAW,CAACuB,MAAZ,CAAmBhB,IAAnB,CAApB;AACAD,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAWiB,KAAX,CAAR;AAED,GAL0D,CAA3D;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,UAAU;AACT,GAFM,EAEJ,EAFI,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGf,KAAK,CAACmB,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,IAAI,CAACC,SAFd;AAGE,QAAA,IAAI,EAAED,IAAI,CAACE,MAHb;AAIE,QAAA,SAAS,EAAEF,IAAI,CAAC,WAAD,CAAJ,CAAkB,CAAlB,CAJb;AAKE,QAAA,IAAI,EAAEA,IAAI,CAACG;AALb,SACOH,IAAI,CAACI,WADZ;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAWKlB,cAAc,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE;AAAK,MAAA,GAAG,EAAEF,WAAV;AAAuB,MAAA,KAAK,EAAE;AAACqB,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,UAAU,EAAE;AAA5B;AAA9B;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9DQ3B,G;UA0ByCD,W;;;KA1BzCC,G;AAgET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport './style/App.css'\n\nfunction App() {\n\n  const [films, setFilms] = useState([])\n  const [page, setPage] = useState(1)\n  const lastElement = useRef()\n  const observer = useRef()\n\n\n  \n\n\n  useEffect (() => {\n    if(isPostsLoading) return\n    \n    var callback = function(entries, observer) {\n      if(entries[0].isIntersecting) {\n        console.log(page)\n        setPage(page+1)\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(lastElement.current)\n    }, \n  [isPostsLoading])\n\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n \n    const posts = await PostService.getAll(page);\n    setFilms(...films, posts)\n\n  })\n\n\n\n  useEffect(() => {\n    fetchPosts();\n    }, [])\n   \n    \n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div className='films__container'>\n        {films.map((film) => \n          <FilmList \n            key={film.kinopoiskId}\n            image={film.posterUrl}\n            name={film.nameRu}\n            countries={film['countries'][0]}\n            year={film.year}\n            >\n          </FilmList>\n          )}\n          {isPostsLoading &&\n        <div>...Loading</div> \n          }\n      </div>\n      <div ref={lastElement} style={{height:'20px', background: 'teal'}}></div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}