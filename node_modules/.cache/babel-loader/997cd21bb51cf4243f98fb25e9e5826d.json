{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IT\\\\myProjects\\\\filmpro\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport { useObserver } from './hooks/useObserver';\nimport './style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(15);\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll(page);\n    setFilms(...films, posts);\n  });\n  useEffect(() => {\n    fetchPosts();\n  }, [page]); // useEffect (() => {\n  //   if(isPostsLoading) return\n  //   if(observer.current) observer.current.disconnect();\n  //   var callback = function(entries, observer) {\n  //     if(entries[0].isIntersecting && page < totalPages) {\n  //       console.log(page)\n  //       setPage(page+1)\n  //     }\n  //   };\n  //   observer.current = new IntersectionObserver(callback);\n  //   observer.current.observe(lastElement.current)\n  //   }, \n  // [isPostsLoading])\n\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"films__container\",\n      children: [films.map(film => /*#__PURE__*/_jsxDEV(FilmList, {\n        image: film.posterUrl,\n        name: film.nameRu,\n        countries: film['countries'][0],\n        year: film.year\n      }, film.kinopoiskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: '20px',\n        background: 'teal'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yhRDgz3ZrTLwA99DomwW5JdIW4Q=\", false, function () {\n  return [useFetching, useObserver];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/IT/myProjects/filmpro/src/App.js"],"names":["React","useEffect","useRef","useState","PostService","FilmList","Header","useFetching","useObserver","App","films","setFilms","page","setPage","totalPages","setTotalPages","lastElement","fetchPosts","isPostsLoading","postError","posts","getAll","map","film","posterUrl","nameRu","year","kinopoiskId","height","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,OAAO,iBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMa,WAAW,GAAGd,MAAM,EAA1B;AAKA,QAAM,CAACe,UAAD,EAAaC,cAAb,EAA6BC,SAA7B,IAA0CZ,WAAW,CAAC,YAAY;AAEtE,UAAMa,KAAK,GAAG,MAAMhB,WAAW,CAACiB,MAAZ,CAAmBT,IAAnB,CAApB;AACAD,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAWU,KAAX,CAAR;AAED,GAL0D,CAA3D;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACT,GAFM,EAEJ,CAACL,IAAD,CAFI,CAAT,CApBa,CAyBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,EAAAA,WAAW,CAACQ,WAAD,EAAcJ,IAAI,GAAGE,UAArB,EAAiCI,cAAjC,EAAiD,MAAM;AAChEL,IAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD,GAFU,CAAX;AAMF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGF,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,QAAA,KAAK,EAAEA,IAAI,CAACC,SAFd;AAGE,QAAA,IAAI,EAAED,IAAI,CAACE,MAHb;AAIE,QAAA,SAAS,EAAEF,IAAI,CAAC,WAAD,CAAJ,CAAkB,CAAlB,CAJb;AAKE,QAAA,IAAI,EAAEA,IAAI,CAACG;AALb,SACOH,IAAI,CAACI,WADZ;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAWKT,cAAc,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAiBE;AACA,MAAA,GAAG,EAAEF,WADL;AAEA,MAAA,KAAK,EAAE;AAACY,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,UAAU,EAAE;AAA5B;AAFP;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GArEQpB,G;UAWyCF,W,EA4B9CC,W;;;KAvCKC,G;AAuET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PostService from './api/PostService';\nimport FilmList from './components/FilmsList';\nimport Header from './components/Header';\nimport { useFetching } from './hooks/useFetching';\nimport {useObserver} from './hooks/useObserver'\nimport './style/App.css'\n\nfunction App() {\n\n  const [films, setFilms] = useState([])\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(15)\n  \n  const lastElement = useRef()\n\n\n  \n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n \n    const posts = await PostService.getAll(page);\n    setFilms(...films, posts)\n\n  })\n\n\n\n  useEffect(() => {\n    fetchPosts();\n    }, [page])\n   \n    \n    // useEffect (() => {\n    //   if(isPostsLoading) return\n    //   if(observer.current) observer.current.disconnect();\n    //   var callback = function(entries, observer) {\n    //     if(entries[0].isIntersecting && page < totalPages) {\n    //       console.log(page)\n    //       setPage(page+1)\n    //     }\n    //   };\n    //   observer.current = new IntersectionObserver(callback);\n    //   observer.current.observe(lastElement.current)\n    //   }, \n    // [isPostsLoading])\n  \n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n      setPage(page+1);\n    })\n\n      \n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div className='films__container'>\n        {films.map((film) => \n          <FilmList \n            key={film.kinopoiskId}\n            image={film.posterUrl}\n            name={film.nameRu}\n            countries={film['countries'][0]}\n            year={film.year}\n            >\n          </FilmList>\n          )}\n          {isPostsLoading &&\n        <div>...Loading</div> \n          }\n      </div>\n      <div \n      ref={lastElement} \n      style={{height:'20px', background: 'teal'}}>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}